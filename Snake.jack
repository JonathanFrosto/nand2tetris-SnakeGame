class Snake {
    field ArrayList body;
    field int length, size;

    constructor Snake new(int xcord, int ycord) {
        var int count;
        let size = 20;
        let length = 3;
        let body = ArrayList.new();
        
        let count = 0;
        while (count < length) {
            do body.add(Square.new(xcord, ycord, size));
            let xcord = xcord - size;
            let count = count + 1;
        }

        return this;
    }

    method void dispose() {
        var Square square;
        var int count;
        
        let count = 0;
        while (count < length) {
            let square = body.getValue(count);
            do square.dispose();
            let count = count + 1;
        }
        do Memory.deAlloc(this);

        return;
    }

    method void simpleMove(Square square, int xcord, int ycord) {
        do square.erase();
        do square.draw(xcord, ycord);

        return;
    }

    method void moveUp() {
        var int lastX, lastY, targetY, count;
        var Square square;
        let square = body.getValue(0);

        let targetY = square.getYCord() - size;
        if (targetY > -1) {
            do simpleMove(square, square.getXCord(), targetY);
            let lastX = square.getLastX();
            let lastY = square.getLastY();

            let count = 1;
            while(count < length ) {
                let square = body.getValue(count);
                do simpleMove(square, lastX, lastY);
                let lastX = square.getLastX();
                let lastY = square.getLastY();
                
                let count = count + 1;
            }
        }
        return;
    }

    method void moveDown() {
        var int lastX, lastY, targetY, count;
        var Square square;
        let square = body.getValue(0);

        let targetY = square.getYCord() + size;
        if ((targetY + size) < 257) {
            do simpleMove(square, square.getXCord(), targetY);
            let lastX = square.getLastX();
            let lastY = square.getLastY();

            let count = 1;
            while(count < length ) {
                let square = body.getValue(count);
                do simpleMove(square, lastX, lastY);
                let lastX = square.getLastX();
                let lastY = square.getLastY();
                
                let count = count + 1;
            }
        }
        return;
    }

    method void moveRight() {
        var int lastX, lastY, targetX, count;
        var Square square;
        let square = body.getValue(0);

        let targetX = square.getXCord() + size;
        if ((targetX + size) < 513) {
            do simpleMove(square, targetX, square.getYCord());
            let lastX = square.getLastX();
            let lastY = square.getLastY();

            let count = 1;
            while(count < length ) {
                let square = body.getValue(count);
                do simpleMove(square, lastX, lastY);
                let lastX = square.getLastX();
                let lastY = square.getLastY();
                
                let count = count + 1;
            }
        }
        return;
    }

    method void moveLeft() {
        var int lastX, lastY, targetX, count;
        var Square square;
        let square = body.getValue(0);

        let targetX = square.getXCord() - size;
        if (targetX > -1) {
            do simpleMove(square, targetX, square.getYCord());
            let lastX = square.getLastX();
            let lastY = square.getLastY();

            let count = 1;
            while(count < length ) {
                let square = body.getValue(count);
                do simpleMove(square, lastX, lastY);
                let lastX = square.getLastX();
                let lastY = square.getLastY();
                
                let count = count + 1;
            }
        }
        return;
    }

    method int getXHead() {
        var Square head;
        var int xCord;
        let head = body.getValue(0);
        let xCord = head.getXCord();
        return xCord;
    }

    method int getYHead() {
        var Square head;
        let head = body.getValue(0);
        return head.getYCord();
    }

    method void grow() {
        var Square tail;
        let tail = body.getValue(length - 1);

        do body.add(Square.new(tail.getLastX(), tail.getLastY(), size));
        let length = length + 1;
        return;
    }

    method ArrayList getBody() {
        return body;
    }

    method int getLength() {
        return length;
    }
}